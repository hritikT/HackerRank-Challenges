#findLowestPrice([['100','sale','january-sale','big'],['200','sale','EMPTY','big']],
[['sale','0','10'],['january-sale','1','10'],['big','2','50']])#input format
#products include price and discount tags (discount can be infinite)
#discounts include information like name of tag its type(0,1 or 2) and amount.
#type0 tag new price=amount
#type1 tag new price=price*(100-amount)/100
#type3 tag new price=price-amount
#this algorithm below is bad (sorry),it works but takes alot of time.
def findLowestPrice(products, discounts):
    final=[]
    finallast=[]
    for i in range(0,len(products)):
        price=int(products[i][0])
        a=[]
        
        for j in range(1,len(products[i])):
            if (products[i][j] != "EMPTY"):
                a.append(products[i][j])
        if (len(a)==0):
            finallast.append(price)
        else:
                
          for j in range(0,len(a)):
            for k in range(0,len(discounts)):
                if (a[j] in discounts[k]):
                    type1=int(discounts[k][1])
                    amount=int(discounts[k][2])
                    
                    if(type1==0):
                        price1=amount
                        final.append(price1)
                        
                    elif(type1==1):
                        price1=price*((100-amount)/100)
                        round(price)
                        final.append(price1)
                    elif(type1==2):
                        price1=price-amount
                        final.append(price1)
                    
            final.sort()
            
          finallast.append(final[0])
          
          final=[]
    
    sum=0
    for i in range(0,len(finallast)):
        sum=int(sum+finallast[i])
        
    return(sum)
    
